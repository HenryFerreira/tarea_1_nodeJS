<!doctype html>
<html lang="es">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>
    <%= title || 'Crear cuenta' %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-light">
  <nav class="navbar navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Tarea 1 - Node.js</a>
      <!-- <div class="d-flex gap-2">
        <a class="btn btn-outline-light btn-sm" href="/login">Iniciar sesión</a>
      </div> -->
    </div>
  </nav>

  <main class="container" style="max-width: 560px;">
    <h1 class="h3 my-4">Crear cuenta</h1>

    <div id="msg" class="alert d-none" role="alert"></div>

    <form id="regForm" class="card shadow-sm">
      <div class="card-body">
        <div class="mb-3">
          <label class="form-label">Email</label>
          <input id="email" type="email" class="form-control" required />
        </div>

        <div class="mb-3">
          <label class="form-label">Contraseña</label>
          <input id="password" type="password" class="form-control" required />
        </div>

        <div class="mb-3">
          <label class="form-label">Nombre (opcional)</label>
          <input id="nombre" type="text" class="form-control" />
        </div>

        <div class="mb-3">
          <label class="form-label">Rol</label>
          <select id="rol" class="form-select">
            <option value="ESTUDIANTE">ESTUDIANTE</option>
            <option value="ADMIN">ADMIN</option>
          </select>
        </div>

        <button class="btn btn-primary w-100" type="submit">Registrarme</button>
        <p class="text-center mt-3">
          ¿Ya tienes una cuenta?
          <a class="btn btn-link p-0 align-baseline" href="/login">Inicia sesión</a>
        </p>

      </div>
    </form>
  </main>

  <script>
    const msg = document.getElementById('msg');
    const showMsg = (t, type = 'danger') => {
      msg.className = `alert alert-${type}`;
      msg.textContent = t; msg.classList.remove('d-none');
    };

    document.getElementById('regForm').addEventListener('submit', async (e) => {
      e.preventDefault(); msg.classList.add('d-none');

      const payload = {
        email: document.getElementById('email').value.trim(),
        password: document.getElementById('password').value,
        nombre: document.getElementById('nombre').value.trim() || undefined,
        rol: document.getElementById('rol').value
      };

      try {
        const res = await fetch('/auth/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
        const data = await res.json();

        if (!res.ok) {
          const err = data?.error || `Error ${res.status}`;
          return showMsg(err);
        }

        // { user, accessToken, refreshToken, accessExp }
        localStorage.setItem('access', data.accessToken);
        localStorage.setItem('refresh', data.refreshToken);
        localStorage.setItem('user', JSON.stringify(data.user || {}));

        const isAdmin = (data.user?.rol === 'ADMIN');
        location.href = isAdmin ? '/admin' : '/';
      } catch (err) {
        showMsg('No se pudo conectar con el servidor');
        console.error(err);
      }
    });
  </script>
</body>

</html>