<!doctype html>
<html lang="es">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>
    <%= title || 'Iniciar sesión' %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-light">
  <nav class="navbar navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Tarea 1 - Node.js</a>
      <!-- <div class="d-flex gap-2">
        <a class="btn btn-outline-light btn-sm" href="/admin">Panel admin</a>
      </div> -->
    </div>
  </nav>

  <main class="container" style="max-width: 520px;">
    <h1 class="h3 my-4">Iniciar sesión</h1>

    <div id="msg" class="alert d-none" role="alert"></div>

    <form id="loginForm" class="card shadow-sm">
      <div class="card-body">
        <div class="mb-3">
          <label class="form-label">Email</label>
          <input id="email" type="email" class="form-control" placeholder="admin@example.com" required />
        </div>

        <div class="mb-3">
          <label class="form-label">Contraseña</label>
          <div class="input-group">
            <input id="password" type="password" class="form-control" placeholder="********" required />
            <button class="btn btn-outline-secondary" type="button" id="togglePwd"
              aria-label="Mostrar/Ocultar contraseña" tabindex="-1">
              <!-- ojo simple con SVG -->
              <svg id="eyeOpen" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor"
                viewBox="0 0 16 16">
                <path
                  d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M3.173 8a6.879 6.879 0 0 1 1.66-2.043C5.88 4.668 6.94 4 8 4s2.12.668 3.168 1.957A6.879 6.879 0 0 1 12.827 8a6.879 6.879 0 0 1-1.659 2.043C10.12 11.332 9.06 12 8 12s-2.12-.668-3.168-1.957A6.88 6.88 0 0 1 3.173 8" />
                <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5" />
              </svg>
              <svg id="eyeClosed" style="display:none" xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                fill="currentColor" viewBox="0 0 16 16">
                <path d="M13.359 11.238 1.122 2.223a.75.75 0 0 1 .756-1.281l13 9a.75.75 0 1 1-.756 1.281z" />
                <path
                  d="M11.297 8.883A6.977 6.977 0 0 1 8 10.5c-5 0-8-5-8-5s1.086-1.982 3.087-3.293l1.209.837C2.977 4.15 1.93 5.287 1.93 5.5S4 9.5 8 9.5a5.48 5.48 0 0 0 2.568-.63l.729 1.013z" />
              </svg>
            </button>
          </div>
        </div>

        <button class="btn btn-primary w-100" type="submit">Ingresar</button>
        <p class="text-center mt-3">
          ¿No tenés cuenta? <a href="/register">Crear cuenta</a>
        </p>
      </div>
    </form>
  </main>

  <script>
    const msg = document.getElementById('msg');

    function showMsg(text, type = 'danger') {
      msg.className = `alert alert-${type}`;
      msg.textContent = text;
      msg.classList.remove('d-none');
    }

    // Mostrar/Ocultar contraseña
    (function () {
      const pwd = document.getElementById('password');
      const btn = document.getElementById('togglePwd');
      const eyeOpen = document.getElementById('eyeOpen');
      const eyeClosed = document.getElementById('eyeClosed');
      btn.addEventListener('click', () => {
        const show = pwd.type === 'password';
        pwd.type = show ? 'text' : 'password';
        eyeOpen.style.display = show ? 'none' : '';
        eyeClosed.style.display = show ? '' : 'none';
      });
    })();

    document.getElementById('loginForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      msg.classList.add('d-none');

      const payload = {
        email: document.getElementById('email').value.trim(),
        password: document.getElementById('password').value
      };

      try {
        const res = await fetch('/auth/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });

        const data = await res.json();

        if (!res.ok) {
          const err = data?.error || `Error ${res.status}`;
          return showMsg(err, 'danger');
        }

        // { user, accessToken, accessExp, refreshToken } -> tu controlador
        localStorage.setItem('access', data.accessToken);
        localStorage.setItem('refresh', data.refreshToken);
        localStorage.setItem('user', JSON.stringify(data.user || {}));

        // --- Redirección por rol ---
        // 1) si viene ?next=... lo respetamos
        // 2) si no viene, enviamos:
        //    ADMIN  -> /admin
        //    (cualquier otro rol, ej. ESTUDIANTE) -> /student
        try {
          const payload = JSON.parse(atob(data.accessToken.split('.')[1]));
          const rol = payload.rol;
          const nextParam = new URLSearchParams(location.search).get('next');
          const dest = nextParam || (rol === 'ADMIN' ? '/admin' : '/student');
          location.replace(dest);
        } catch (e) {
          // fallback: si algo falla al decodificar, vamos a /student
          const nextParam = new URLSearchParams(location.search).get('next');
          location.replace(nextParam || '/student');
        }

      } catch (err) {
        showMsg('No se pudo conectar con el servidor.');
        console.error(err);
      }
    });
  </script>
</body>

</html>